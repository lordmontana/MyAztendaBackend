// <auto-generated />
using System;
using EmployeeService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EmployeeService.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("atzenda")
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmployeeService.Domain.Entities.Forms.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_utc");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<int>("IId")
                        .HasColumnType("integer")
                        .HasColumnName("i_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_utc");

                    b.HasKey("Id")
                        .HasName("pk_employee");

                    b.ToTable("employee", "atzenda");
                });

            modelBuilder.Entity("EmployeeService.Domain.Entities.Forms.TimeTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_utc");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employee_id");

                    b.Property<int?>("HoursFriday")
                        .HasColumnType("integer")
                        .HasColumnName("hours_friday");

                    b.Property<int?>("HoursMonday")
                        .HasColumnType("integer")
                        .HasColumnName("hours_monday");

                    b.Property<int?>("HoursSaturday")
                        .HasColumnType("integer")
                        .HasColumnName("hours_saturday");

                    b.Property<int?>("HoursSunday")
                        .HasColumnType("integer")
                        .HasColumnName("hours_sunday");

                    b.Property<int?>("HoursThursday")
                        .HasColumnType("integer")
                        .HasColumnName("hours_thursday");

                    b.Property<int?>("HoursTuesday")
                        .HasColumnType("integer")
                        .HasColumnName("hours_tuesday");

                    b.Property<int?>("HoursWednesday")
                        .HasColumnType("integer")
                        .HasColumnName("hours_wednesday");

                    b.Property<int>("IId")
                        .HasColumnType("integer")
                        .HasColumnName("i_id");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_utc");

                    b.Property<DateTime?>("WeekStartUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("week_start_utc");

                    b.HasKey("Id")
                        .HasName("pk_time_table_forms");

                    b.ToTable("time_table_forms", "atzenda");
                });

            modelBuilder.Entity("Shared.Logging.Enities.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChangesJson")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("changes_json");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_utc");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer")
                        .HasColumnName("entity_id");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("entity_name");

                    b.Property<int>("IId")
                        .HasColumnType("integer")
                        .HasColumnName("i_id");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("operation");

                    b.Property<DateTime>("PerformedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("performed_at_utc");

                    b.Property<string>("PerformedBy")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("performed_by");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("table_name");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_utc");

                    b.HasKey("Id")
                        .HasName("pk_human_resources_audit_log");

                    b.ToTable("HumanResourcesAuditLog", "atzenda");
                });
#pragma warning restore 612, 618
        }
    }
}
